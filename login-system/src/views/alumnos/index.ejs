<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Módulo de Alumnos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Margarine&display=swap" rel="stylesheet">
    <style>
        .pagination {
            margin-top: 3px;
            justify-content: center; /* Centrar la paginación */
        }
        /* Estilos de los mensajes emergentes */
        #messageBox {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            width: 300px;
        }
        body {
            margin: 0;
            font-family: 'Margarine', sans-serif;
            display: flex;
            min-height: 100vh;
            background-color: #f7f7f7;
        }
        .button-group {
            display: flex;
            gap: 5px; /* Reduce el espacio entre los botones */
        }
        
        .button-group .btn {
            margin: 0; /* Asegúrate de que no haya márgenes adicionales */
            padding: 10px 10px; /* Ajusta el padding para que los botones sean más pequeños si es necesario */
        }
        
        @media print {
            .no-print {
                display: none;
            }
        }
        /* Botones */
        .btn {
            display: inline-flex;
            align-items: center;
            padding: 8px 12px;
            margin: 5px;
            font-size: 16px;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        /* contenedores de filtro */
        .filters {
            display: flex;
            gap: 10px;
            margin-top: 20px;
            margin-left: 270px;
        }
        
        .filters input[type="text"],
        .filters select {
            max-width: 200px;
            padding: 8px 12px; /* Espaciado interno */
            font-weight: normal; /* Normalizar el peso del texto */
            color: #333; /* Texto negro oscuro */
            background-color: #fff; /* Fondo blanco */
            border: 1px solid #ccc; /* Borde gris */
            border-radius: 4px; /* Bordes redondeados */
        }
        
        .filters input[type="text"]::placeholder {
            color: #666; /* Color del placeholder */
        }
        
        .filters select {
            padding-left: 10px; /* Espacio a la izquierda para el select */
        }

        /* Selección de registros por página */
        .records-per-page-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
            margin-bottom: 20px;
        }
        
        .records-per-page-label {
            font-weight: bold;
        }
        
        .records-per-page-select {
            max-width: 150px;
        }
        
        /* Tabla */
        /* Asegúrate de que tu tabla esté centrada */
        .table-container {
            display: flex;
            flex-direction: column;
            align-items: center; /* Centrar horizontalmente */
            margin-top: 10px, 40px; /* Espacio superior */
            margin-left: 270px;
        }
        
        .table {
            width: 400%; /* Ocupa todo el ancho disponible */
            max-width: 1000px; /* Cambia según sea necesario */
            margin: 20px auto; /* Centrar y agregar espacio superior/inferior */
        }
        
        .table th, .table td {
            padding: 10px;
            text-align: left;
        }
        
        .table th {
            background-color: #f8f9fa;
            font-weight: bold;
        }
        
        .table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        
        .table thead th {
            background-color: #359b16;
            color: white;
        }
        
        /* Estilo para el botón de Crear Usuario */
        .btn-primary {
            border-radius: 0.25rem;
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
            font-weight: bold;
            transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
        }
        
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        
        .btn-primary i {
            margin-right: 5px;
        }
        
        /* Estilo para los botones de descarga */
        .btn-download {
            border-radius: 0.25rem;
            font-weight: bold;
            transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
            font-family: 'Lato', sans-serif;
            font-size: 1rem;
        }
        
        .btn-pdf:hover {
            background-color: #fff;
            color: #dc3545;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        
        .btn-download i {
            margin-right: 5px;
        }
        
        /* Modales */
        .modal-header {
            background-color: #007bff;
            color: white;
        }
        
        .modal-header .btn-close {
            color: white;
        }
        
        /* Botones dentro de los modales */
        .modal .btn {
            margin-top: 10px;
        }
        
        /* Contenido del dashboard */
        .dashboard-container {
            display: flex;
            flex-direction: column;
        }
        
        .sidebar {
            width: 210px;
            background-color: #2a2d34;
            color: #fff;
            position: fixed;
            height: 100%;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            transition: left 0.3s ease;
            overflow: auto;
        }
        
        .sidebar.active {
            left: 0;
        }
        
        .nav-links li {
            position: relative;
        }
        
        
        .nav-links {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .nav-links a {
            display: flex;
            align-items: center;
            padding: 13.5px;
            color: #fff;
            text-decoration: none;
            position: relative;
        }
        
        /* Animación de movimiento para cada opción del menú al pasar el mouse */
        .nav-links a:hover {
            background-color: #3e4149;
            transform: translateY(-5px); /* Mueve la opción hacia arriba */
        }
        
        /* Animación de retorno a la posición original */
        .nav-links a {
            transition: transform 0.3s ease;
        }
        
        .nav-links a i {
            margin-right: 15px; /* Mantiene el espacio entre icono y texto */
            font-size: 16px; /* Asegura que todos los iconos tengan el mismo tamaño */
            width: 20px; /* Añade un ancho fijo para mantener el espacio igual */
            text-align: center; /* Centra el ícono dentro de ese espacio */
        }
        
        .header {
            background: -webkit-linear-gradient(38deg, #39bb25, #f4f816); /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(38deg, #39bb25, #f4f816); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
            color: #070707;
            padding: 12px;
            position: fixed;
            top: 0;
            left: 250px;
            width: calc(100% - 250px);
            display: flex;
            align-items: center;
            justify-content: space-between; /* Centra el contenido */
            z-index: 1000;
        }
        
        .header-logo img {
            height: 80px;
            margin-right: 15px;
        }
        
        .header h1 {
            font-weight: 800;
            font-size: 1.8em;
            text-align: center; /* Asegura que el texto esté centrado dentro de su contenedor */
            margin: 0 auto; /* Centra el título dentro de su contenedor */
        }
        
        .content {
            margin-left: 250px;
            margin-top: 60px;
            padding: 20px;
        }
        
        .button-container {
            display: flex;
            align-items: center; /* Alinear botones verticalmente */
            gap: 10px; /* Espacio entre botones */
        }
        
        .export-button {
            background-color: #f72821; /* Color de fondo rojo */
            color: white; /* Color de texto blanco */
            border: none; /* Sin borde */
            transition: all 0.3s; /* Transición suave para efectos */
        }
        
        .export-button:hover {
            background-color: white; /* Fondo blanco al pasar el mouse */
            color: #f72821; /* Texto rojo al pasar el mouse */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Sombra gris en la parte inferior */
        }
        .button-container {
            display: flex;
            justify-content: flex-end; /* Alinea los botones a la derecha */
            margin-top: 20px; /* Espacio entre el título y los botones */
            margin-right: 290px; /* Espacio a la derecha para mover los botones */
        }
        
        .button-container .btn {
            margin-left: 10px; /* Espacio entre los botones */
        }
        .module-title {
            margin-top: 70px; /* Aumenta el espacio debajo del título */
            margin-left: 270px; /* Mueve el título hacia la derecha */
            position: relative; 
            z-index: 1; 
        }
        .nav-category {
            margin-bottom: 10px; /* Espacio entre categorías */
            margin-top: 10px;
        }
        
        .nav-category h3 {
            font-size: 1em; /* Tamaño del texto del título */
            color: #05f505; /* Color del título */
            margin-bottom: 7px; /* Espacio debajo del título */
        }

        /* Fondo transparente que cubre toda la página */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000; /* Asegura que esté por encima de otros elementos */
        }

        /* Contenido del cargando */
        .loading-content {
            text-align: center;
            color: white;
            font-size: 24px;
        }

        /* Ícono de carga */
        .loading-content i {
            font-size: 50px;
            margin-bottom: 10px;
        }
        </style>
</head>
<body>

    <div id="loading" style="display: none;" class="loading-overlay">
        <div class="loading-content">
            <i class="fas fa-spinner fa-spin"></i>
            <p>Cargando...</p>
        </div>
    </div>
    
    <div class="dashboard-container">
        <!-- Menú lateral -->
        <nav class="sidebar">
            <div class="nav-category">
                <h3><i class="fas fa-cogs"></i> Administración</h3>
                <ul class="nav-links">
                    <li><a href="/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                    <li><a href="/usuarios"><i class="fas fa-users"></i> Usuarios</a></li>
                    <li><a href="/profesores"><i class="fas fa-chalkboard-teacher"></i> Profesores</a></li>
                    <li><a href="/alumnos"><i class="fas fa-user-graduate"></i> Alumnos</a></li>
                    <li><a href="/grados"><i class="fas fa-graduation-cap"></i> Grados</a></li>
                </ul>
            </div>
            
            <div class="nav-category">
                <h3><i class="fas fa-book-open"></i> Gestión Académica</h3>
                <ul class="nav-links">
                    <li><a href="/cursos"><i class="fas fa-book"></i> Cursos</a></li>
                    <li><a href="/horarios"><i class="fas fa-clock"></i> Horarios</a></li>
                    <li><a href="/asistencias"><i class="fas fa-user-check"></i> Asistencia</a></li>
                    <li><a href="/periodos"><i class="fas fa-calendar-alt"></i> Periodo Escolar</a></li>
                </ul>
            </div>
            
            <div class="nav-category">
                <h3><i class="fas fa-money-check-alt"></i> Gestión Financiera</h3>
                <ul class="nav-links">
                    <li><a href="/pagos"><i class="fas fa-money-bill-alt"></i> Control de Pagos y Recibos</a></li>
                </ul>
            </div>
            
            <div class="nav-category">
                <h3><i class="fas fa-chart-line"></i> Reportes y Notificaciones</h3>
                <ul class="nav-links">
                    <li><a href="/reportes"><i class="fas fa-chart-bar"></i> Reportes</a></li>
                </ul>
            </div>        
        </nav>

        <div class="container-fluid" style="margin-top: -40px; margin-left: -50px;"> <!-- Ajusta el margin-top aquí -->
            <div class="header-section">
                <h2 class="module-title">Alumnos</h2>
                <div class="button-container">
                    <button type="button" class="btn btn-primary btn-custom" data-toggle="modal" data-target="#addModal">
                        <i class="fas fa-user-plus"></i> Agregar Alumno
                    </button>
                    <button class="btn export-button" id="descargarReportePrimaria" data-nivel="1">
                        <i class="fas fa-file-pdf"></i> Primaria
                    </button>
                    <button class="btn export-button" id="descargarReporteBasico" data-nivel="2">
                        <i class="fas fa-file-pdf"></i> Básico
                    </button>
                    <button class="btn export-button" id="descargarReporteDiversificado" data-nivel="3">
                        <i class="fas fa-file-pdf"></i> Diversificado
                    </button>
                </div>
            </div>
        
            <div class="filters mt-1">
                <input type="text" id="filter_nombre" placeholder="Nombre">
                <input type="text" id="filter_grado" placeholder="Grado">
                <input type="text" id="filter_seccion" placeholder="Sección">
                <select id="filter_estado">
                    <option value="">Estado</option>
                    <option value="activo">Activo</option>
                    <option value="inactivo">Inactivo</option>
                </select>
            </div>
        
            <div class="table-container mt-1">
                <table class="table" id="tablaAlumnos" style="border-collapse: collapse;"> <!-- Eliminamos el borde de la tabla -->
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>Fecha de Nacimiento</th>
                            <th>Email</th>
                            <th>Teléfono</th>
                            <th>Sección</th>
                            <th>Grado</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="alumnosBody">
                        <% alumnos.forEach(alumno => { %>
                            <tr id="alumno-<%= alumno.id_alumno %>">
                                <td><%= alumno.id_alumno %></td>
                                <td><%= alumno.nombre %></td>
                                <td><%= alumno.apellido %></td>
                                <td><%= new Date(alumno.fecha_nacimiento).toLocaleDateString('es-GT') %></td>
                                <td><%= alumno.email %></td>
                                <td><%= alumno.telefono %></td>
                                <td><%= alumno.seccion %></td>
                                <td>
                                    <% if (alumno.id_grado == 5) { %> Primero Primaria
                                    <% } else if (alumno.id_grado == 6) { %> Segundo Primaria
                                    <% } else if (alumno.id_grado == 7) { %> Tercero Primaria
                                    <% } else if (alumno.id_grado == 8) { %> Cuarto Primaria
                                    <% } else if (alumno.id_grado == 9) { %> Quinto Primaria
                                    <% } else if (alumno.id_grado == 12) { %> Sexto Primaria
                                    <% } else if (alumno.id_grado == 13) { %> Primero Básico
                                    <% } else if (alumno.id_grado == 14) { %> Segundo Básico
                                    <% } else if (alumno.id_grado == 15) { %> Tercero Básico
                                    <% } else if (alumno.id_grado == 20) { %> Bachillerato en Ciencias Biológicas
                                    <% } else if (alumno.id_grado == 21) { %> Bachillerato en Computación
                                    <% } else if (alumno.id_grado == 22) { %> Bachillerato en Medicina
                                    <% } else if (alumno.id_grado == 23) { %> Bachillerato en Magisterio
                                    <% } else if (alumno.id_grado == 26) { %> Bachillerato en Turismo
                                    <% } else if (alumno.id_grado == 27) { %> Bachillerato en Criminología
                                    <% } else if (alumno.id_grado == 29) { %> Bachillerato en Secretariado
                                    <% } else if (alumno.id_grado == 30) { %> Perito Contador
                                    <% } %>
                                </td>
                                <td><%= alumno.estado %></td>
                                <td>
                                    <div class="button-group">
                                        <button class="btn btn-info btn-sm" data-toggle="modal" data-target="#viewModal" data-id="<%= alumno.id_alumno %>"><i class="fas fa-eye"></i></button>
                                        <button class="btn btn-warning" data-toggle="modal" data-target="#editModal" data-id="<%= alumno.id_alumno %>"><i class="fas fa-edit"></i></button>
                                        <button class="btn btn-danger" data-id="<%= alumno.id_alumno %>" data-toggle="modal" data-target="#deleteModal"><i class="fas fa-trash"></i></button>
                                        <button class="btn btn-success btn-sm" data-toggle="modal" data-target="#fichaModal" data-id="<%= alumno.id_alumno %>" onclick="verFicha(this)"><i class="fas fa-address-card"></i></button>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        
            <nav aria-label="Page navigation" class="mt-1">
                <ul class="pagination justify-content-center" id="alumnosPagination">
                    <!-- Aquí se llenarán los botones de paginación -->
                </ul>
            </nav>
        </div>
        
        
    <!-- Modal de agregar alumno -->
    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Agregar Alumno</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addAlumnoForm">
                        <div class="form-group">
                            <label for="nombre">Nombre</label>
                            <input type="text" class="form-control" id="nombre" required>
                        </div>
                        <div class="form-group">
                            <label for="apellido">Apellido</label>
                            <input type="text" class="form-control" id="apellido" required>
                        </div>
                        <div class="form-group">
                            <label for="fecha_nacimiento">Fecha de Nacimiento</label>
                            <input type="date" class="form-control" id="fecha_nacimiento" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" class="form-control" id="email" required>
                        </div>
                        <div class="form-group">
                            <label for="telefono">Teléfono</label>
                            <input type="text" class="form-control" id="telefono" required>
                        </div>
                        <div class="form-group">
                            <label for="seccion">Sección</label>
                            <select class="form-control" id="seccion" required>
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="id_grado">Grado</label>
                            <select class="form-control" id="id_grado" required>
                                <option value="5">Primero Primaria</option>
                                <option value="6">Segundo Primaria</option>
                                <option value="7">Tercero Primaria</option>
                                <option value="8">Cuarto Primaria</option>
                                <option value="9">Quinto Primaria</option>
                                <option value="12">Sexto Primaria</option>
                                <option value="13">Primero Básico</option>
                                <option value="14">Segundo Básico</option>
                                <option value="15">Tercero Básico</option>
                                <option value="20">Bachillerato en Ciencias Biológicas</option>
                                <option value="21">Bachillerato en Computación</option>
                                <option value="22">Bachillerato en Medicina</option>
                                <option value="23">Bachillerato en Magisterio</option>
                                <option value="26">Bachillerato en Turismo</option>
                                <option value="27">Bachillerato en Criminología</option>
                                <option value="29">Bachillerato en Secretariado</option>
                                <option value="30">Perito Contador</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="estado">Estado</label>
                            <select class="form-control" id="estado">
                                <option value="activo">Activo</option>
                                <option value="inactivo">Inactivo</option>
                            </select>
                        </div>
                        <!-- Datos del padre -->
                    <h5>Datos del Padre</h5>
                    <div class="form-group">
                        <label for="nombre_padre">Nombre del Padre</label>
                        <input type="text" class="form-control" id="nombre_padre" required>
                    </div>
                    <div class="form-group">
                        <label for="telefono_padre">Teléfono del Padre</label>
                        <input type="text" class="form-control" id="telefono_padre" required>
                    </div>
                    <div class="form-group">
                        <label for="correo_padre">Correo del Padre</label>
                        <input type="email" class="form-control" id="correo_padre" required>
                    </div>
                    <!-- Datos de la madre -->
                    <h5>Datos de la Madre</h5>
                    <div class="form-group">
                        <label for="nombre_madre">Nombre de la Madre</label>
                        <input type="text" class="form-control" id="nombre_madre" required>
                    </div>
                    <div class="form-group">
                        <label for="telefono_madre">Teléfono de la Madre</label>
                        <input type="text" class="form-control" id="telefono_madre" required>
                    </div>
                    <div class="form-group">
                        <label for="correo_madre">Correo de la Madre</label>
                        <input type="email" class="form-control" id="correo_madre" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Agregar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de editar alumno -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Editar Alumno</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editAlumnoForm">
                        <input type="hidden" id="edit_id">
                        <div class="form-group">
                            <label for="edit_nombre">Nombre</label>
                            <input type="text" class="form-control" id="edit_nombre" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_apellido">Apellido</label>
                            <input type="text" class="form-control" id="edit_apellido" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_fecha_nacimiento">Fecha de Nacimiento</label>
                            <input type="date" class="form-control" id="edit_fecha_nacimiento" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_email">Email</label>
                            <input type="email" class="form-control" id="edit_email" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_telefono">Teléfono</label>
                            <input type="text" class="form-control" id="edit_telefono" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_seccion">Sección</label>
                            <select class="form-control" id="edit_seccion" required>
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="edit_id_grado">Grado</label>
                            <select class="form-control" id="edit_id_grado" required>
                                <option value="5">Primero Primaria</option>
                                <option value="6">Segundo Primaria</option>
                                <option value="7">Tercero Primaria</option>
                                <option value="8">Cuarto Primaria</option>
                                <option value="9">Quinto Primaria</option>
                                <option value="12">Sexto Primaria</option>
                                <option value="13">Primero Básico</option>
                                <option value="14">Segundo Básico</option>
                                <option value="15">Tercero Básico</option>
                                <option value="20">Bachillerato en Ciencias Biológicas</option>
                                <option value="21">Bachillerato en Computación</option>
                                <option value="22">Bachillerato en Medicina</option>
                                <option value="23">Bachillerato en Magisterio</option>
                                <option value="26">Bachillerato en Turismo</option>
                                <option value="27">Bachillerato en Criminología</option>
                                <option value="29">Bachillerato en Secretariado</option>
                                <option value="30">Perito Contador</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="edit_estado">Estado</label>
                            <select class="form-control" id="edit_estado">
                                <option value="activo">Activo</option>
                                <option value="inactivo">Inactivo</option>
                            </select>
                        </div>
                        <!-- Información de los padres -->
                    <h5>Datos del Padre</h5>
                    <div class="form-group">
                        <label for="edit_nombre_padre">Nombre del Padre</label>
                        <input type="text" class="form-control" id="edit_nombre_padre">
                    </div>
                    <div class="form-group">
                        <label for="edit_telefono_padre">Teléfono del Padre</label>
                        <input type="text" class="form-control" id="edit_telefono_padre">
                    </div>
                    <div class="form-group">
                        <label for="edit_correo_padre">Correo del Padre</label>
                        <input type="email" class="form-control" id="edit_correo_padre">
                    </div>
                    <h5>Datos de la Madre</h5>
                    <div class="form-group">
                        <label for="edit_nombre_madre">Nombre de la Madre</label>
                        <input type="text" class="form-control" id="edit_nombre_madre">
                    </div>
                    <div class="form-group">
                        <label for="edit_telefono_madre">Teléfono de la Madre</label>
                        <input type="text" class="form-control" id="edit_telefono_madre">
                    </div>
                    <div class="form-group">
                        <label for="edit_correo_madre">Correo de la Madre</label>
                        <input type="email" class="form-control" id="edit_correo_madre">
                    </div>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-warning">Actualizar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de ver alumno -->
<div class="modal fade" id="viewModal" tabindex="-1" role="dialog" aria-labelledby="viewModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewModalLabel">Detalles del Alumno</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p><strong>ID:</strong> <span id="view_id"></span></p>
                <p><strong>Nombre:</strong> <span id="view_nombre"></span></p>
                <p><strong>Apellido:</strong> <span id="view_apellido"></span></p>
                <p><strong>Fecha de Nacimiento:</strong> <span id="view_fecha_nacimiento"></span></p>
                <p><strong>Email:</strong> <span id="view_email"></span></p>
                <p><strong>Teléfono:</strong> <span id="view_telefono"></span></p>
                <p><strong>Sección:</strong> <span id="view_seccion"></span></p>
                <p><strong>Grado:</strong> <span id="view_grado"></span></p>
                <p><strong>Estado:</strong> <span id="view_estado"></span></p>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Ficha del Alumno -->
<div class="modal fade" id="fichaModal" tabindex="-1" role="dialog" aria-labelledby="fichaModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="fichaModalLabel">Ficha del Alumno</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="fichaContent">
                <h5>Datos del Alumno:</h5>
                <p><strong>Nombre:</strong> <span id="alumnoNombre"></span></p>
                <p><strong>Apellido:</strong> <span id="alumnoApellido"></span></p>
                <h5>Datos de los Padres:</h5>
                <p><strong>Nombre del Padre:</strong> <span id="padreNombre"></span></p>
                <p><strong>Teléfono del Padre:</strong> <span id="padreTelefono"></span></p>
                <p><strong>Correo del Padre:</strong> <span id="padreCorreo"></span></p>
                <p><strong>Nombre de la Madre:</strong> <span id="madreNombre"></span></p>
                <p><strong>Teléfono de la Madre:</strong> <span id="madreTelefono"></span></p>
                <p><strong>Correo de la Madre:</strong> <span id="madreCorreo"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

    <!-- Modal de eliminar alumno -->
    <!-- Modal de eliminar alumno -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Eliminar Alumno</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar este alumno?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Eliminar</button>
            </div>
        </div>
    </div>
</div>


    <!-- Añade esto para mostrar mensajes -->
<div id="messageBox" class="alert" style="display:none;"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.min.js"></script>

    <script>
        // Mostrar mensajes de éxito o error
            function showMessage(type, message) {
            const messageBox = document.getElementById('messageBox');
            messageBox.className = `alert alert-${type}`;
            messageBox.innerHTML = `<i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i> ${message}`;
            messageBox.style.display = 'block'; // Muestra el mensaje
            setTimeout(() => messageBox.style.display = 'none', 3000); // Oculta el mensaje después de 3 segundos
            }

        let alumnos = []; // Inicializamos el arreglo de alumnos
        const registrosPorPagina = 5; // Ajusta este número según sea necesario
        let paginaActual = 1;

        // Función para cargar los datos de alumnos desde el backend
function cargarAlumnos() {
    fetch('/api/alumnos')
        .then(response => response.json())
        .then(data => {
            alumnos = data; // Guardamos los datos de alumnos
        })
        .catch(error => console.error('Error al cargar los alumnos:', error));
}

// Llamamos a la función para cargar los datos al inicio
cargarAlumnos();

// Mapear los grados a sus nombres
const gradosMap = {
    5: 'Primero Primaria',
    6: 'Segundo Primaria',
    7: 'Tercero Primaria',
    8: 'Cuarto Primaria',
    9: 'Quinto Primaria',
    12: 'Sexto Primaria',
    13: 'Primero Básico',
    14: 'Segundo Básico',
    15: 'Tercero Básico',
    20: 'Bachillerato en Ciencias Biológicas',
    21: 'Bachillerato en Computación',
    22: 'Bachillerato en Medicina',
    23: 'Bachillerato en Magisterio',
    26: 'Bachillerato en Turismo',
    27: 'Bachillerato en Criminología',
    29: 'Bachillerato en Secretariado',
    30: 'Perito Contador'
};

// Event listeners para los botones de descarga
document.getElementById('descargarReportePrimaria').onclick = () => generarReporte(1);
document.getElementById('descargarReporteBasico').onclick = () => generarReporte(2);
document.getElementById('descargarReporteDiversificado').onclick = () => generarReporte(3);

function generarReporte(nivel) {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF('landscape'); // Establecer orientación horizontal

    // Agregar logo
    const logo = new Image();
    logo.src = 'img/home.jpg'; // Cambia esta línea a la ruta de tu logo
    logo.onload = function() {
        doc.addImage(logo, 'PNG', 10, 10, 30, 30); // Ajusta tamaño y posición del logo

        // Título del reporte
        doc.setFont('Helvetica', 'bold');
        doc.setFontSize(24); // Tamaño del nombre del colegio
        const colegioTexto = 'Centro Escolar La Escuela de Cristo';
        const colegioX = (doc.internal.pageSize.getWidth() - doc.getTextWidth(colegioTexto)) / 2; // Cálculo para centrar
        doc.text(colegioTexto, colegioX, 20);

        // Cambiar a fuente Times para el nivel
        doc.setFont('Times', 'normal');
        doc.setFontSize(16); // Tamaño del nivel
        const nivelTexto = `Nivel: ${nivel === 1 ? 'Primaria' : nivel === 2 ? 'Básico' : 'Diversificado'}`;
        const nivelX = (doc.internal.pageSize.getWidth() - doc.getTextWidth(nivelTexto)) / 2; // Cálculo para centrar
        doc.text(nivelTexto, nivelX, 40);

        // Filtrar alumnos según el nivel
        const alumnosFiltrados = alumnos.filter(alumno => {
            return (nivel === 1 && [5, 6, 7, 8, 9, 12].includes(alumno.id_grado)) ||
                   (nivel === 2 && [13, 14, 15].includes(alumno.id_grado)) ||
                   (nivel === 3 && [20, 21, 22, 23, 26, 27, 29, 30].includes(alumno.id_grado));
        });

        // Datos de alumnos para la tabla
        const datos = alumnosFiltrados.map(alumno => [
            alumno.id_alumno,
            alumno.nombre,
            alumno.apellido,
            new Date(alumno.fecha_nacimiento).toLocaleDateString('es-GT'),
            alumno.email,
            alumno.telefono,
            alumno.seccion,
            gradosMap[alumno.id_grado] || 'Grado desconocido',
            alumno.estado
        ]);

        // Si no hay datos
        if (alumnosFiltrados.length === 0) {
            doc.setFont('Helvetica', 'normal');
            doc.text('No hay datos para mostrar.', 10, 50);
        } else {
            // Crear tabla con autoTable
            doc.autoTable({
                head: [['ID', 'Nombre', 'Apellido', 'Fecha de Nacimiento', 'Email', 'Teléfono', 'Sección', 'Grado', 'Estado']],
                body: datos,
                startY: 50, // Posición de la tabla en el eje Y
                theme: 'grid', // Tema con líneas de tabla
                headStyles: { fillColor: [76, 175, 80], font: 'Helvetica', fontStyle: 'bold' }, // Color verde claro y negrita para el encabezado
                styles: { fontSize: 11, cellPadding: 3, font: 'Helvetica' }, // Ajustes de estilo y espacio
                columnStyles: {
                    0: { cellWidth: 20 },  // ID
                    1: { cellWidth: 30 },  // Nombre
                    2: { cellWidth: 30 },  // Apellido
                    3: { cellWidth: 30 },  // Fecha de Nacimiento
                    4: { cellWidth: 40 },  // Email
                    5: { cellWidth: 30 },  // Teléfono
                    6: { cellWidth: 20 },  // Sección
                    7: { cellWidth: 40 },  // Grado
                    8: { cellWidth: 20 }   // Estado
                }
            });
        }

        // Pie de página con fecha y hora
        const fechaActual = new Date();
        const fechaGeneracion = fechaActual.toLocaleDateString('es-GT');
        const horaGeneracion = fechaActual.toLocaleTimeString('es-GT');
        doc.setFontSize(8);
        doc.setFont('Helvetica', 'normal');
        doc.text(`Generado el: ${fechaGeneracion} a las ${horaGeneracion}`, 10, doc.internal.pageSize.height - 10);

        // Guardar el documento PDF
        doc.save(`reporte_alumnos_nivel_${nivel}.pdf`);
    };
}


        // Agregar alumno
        $('#addAlumnoForm').submit(function (event) {
            event.preventDefault(); // Detiene el comportamiento predeterminado de envío del formulario
            console.log('Formulario enviado, evitando recarga.'); // Para verificar que se evita la recarga
            
            // Recopilar los datos del formulario
            const data = {
                nombre: $('#nombre').val(),
                apellido: $('#apellido').val(),
                fecha_nacimiento: $('#fecha_nacimiento').val(),
                email: $('#email').val(),
                telefono: $('#telefono').val(),
                seccion: $('#seccion').val(),
                id_grado: $('#id_grado').val(),
                estado: $('#estado').val(),
                // Datos del padre
                nombre_padre: $('#nombre_padre').val(),
                telefono_padre: $('#telefono_padre').val(),
                correo_padre: $('#correo_padre').val(),
                // Datos de la madre
                nombre_madre: $('#nombre_madre').val(),
                telefono_madre: $('#telefono_madre').val(),
                correo_madre: $('#correo_madre').val()
            };
        
            // Hacer la solicitud AJAX para agregar el alumno
            $.ajax({
                url: '/alumnos',
                type: 'POST',
                data: data,
                success: function (response) {
                    console.log('Respuesta del servidor:', response);
                    cargarAlumnos();
                    $('#addModal').modal('hide');
                    $('.modal-backdrop').remove();
                    $('#addAlumnoForm')[0].reset();
                    showMessage('success', 'Alumno agregado con éxito');
                },
                error: function (error) {
                    showMessage('danger', 'Error al agregar el alumno');
                    console.error(error); // Para rastrear el error
                }
            });
        });            
        
        
        
        // Editar alumno
// Editar alumno
$('#editAlumnoForm').submit(function (event) {
    event.preventDefault();
    const id = $('#edit_id').val();
    const data = {
        nombre: $('#edit_nombre').val(),
        apellido: $('#edit_apellido').val(),
        fecha_nacimiento: $('#edit_fecha_nacimiento').val(),
        email: $('#edit_email').val(),
        telefono: $('#edit_telefono').val(),
        seccion: $('#edit_seccion').val(),
        id_grado: $('#edit_id_grado').val(),
        estado: $('#edit_estado').val(),
        // Datos del padre
        nombre_padre: $('#edit_nombre_padre').val(),
        telefono_padre: $('#edit_telefono_padre').val(),
        correo_padre: $('#edit_correo_padre').val(),
        // Datos de la madre
        nombre_madre: $('#edit_nombre_madre').val(),
        telefono_madre: $('#edit_telefono_madre').val(),
        correo_madre: $('#edit_correo_madre').val()
    };

    $.ajax({
        url: `/alumnos/${id}`,
        type: 'PUT',
        data: data,
        success: function (alumnoActualizado) {
            // Actualizar la fila del alumno en la tabla
            actualizarFilaAlumno(alumnoActualizado);
            $('#editModal').modal('hide'); // Cerrar el modal
            $('.modal-backdrop').remove(); // Eliminar el fondo oscuro
            showMessage('success', 'Alumno actualizado con éxito'); // Mostrar mensaje de éxito
        },
        error: function () {
            showMessage('danger', 'Error al actualizar el alumno'); // Mensaje de error
        }
    });
});

// Función para actualizar la fila del alumno en la tabla
function actualizarFilaAlumno(alumno) {
    const fila = $(`#alumno-${alumno.id_alumno}`);
    
    fila.find('td:eq(1)').text(alumno.nombre);
    fila.find('td:eq(2)').text(alumno.apellido);
    fila.find('td:eq(3)').text(new Date(alumno.fecha_nacimiento).toLocaleDateString('es-GT'));
    fila.find('td:eq(4)').text(alumno.email);
    fila.find('td:eq(5)').text(alumno.telefono);
    fila.find('td:eq(6)').text(alumno.seccion);

    // Actualizar el grado
    let gradoTexto;
    switch (alumno.id_grado) {
        case 5: gradoTexto = 'Primero Primaria'; break;
        case 6: gradoTexto = 'Segundo Primaria'; break;
        case 7: gradoTexto = 'Tercero Primaria'; break;
        case 8: gradoTexto = 'Cuarto Primaria'; break;
        case 9: gradoTexto = 'Quinto Primaria'; break;
        case 12: gradoTexto = 'Sexto Primaria'; break;
        case 13: gradoTexto = 'Primero Básico'; break;
        case 14: gradoTexto = 'Segundo Básico'; break;
        case 15: gradoTexto = 'Tercero Básico'; break;
        case 20: gradoTexto = 'Bachillerato en Ciencias Biológicas'; break;
        case 21: gradoTexto = 'Bachillerato en Computación'; break;
        case 22: gradoTexto = 'Bachillerato en Medicina'; break;
        case 23: gradoTexto = 'Bachillerato en Magisterio'; break;
        case 26: gradoTexto = 'Bachillerato en Turismo'; break;
        case 27: gradoTexto = 'Bachillerato en Criminología'; break;
        case 29: gradoTexto = 'Bachillerato en Secretariado'; break;
        case 30: gradoTexto = 'Perito Contador'; break;
        default: gradoTexto = 'Desconocido';
    }
    fila.find('td:eq(7)').text(gradoTexto);

    // Actualizar estado
    fila.find('td:eq(8)').text(alumno.estado);
}


// Cargar los datos del alumno en el modal
$(document).on('click', '.btn-warning', function () {
    const id = $(this).data('id');

    // Cargar los datos del alumno
    $.get(`/alumnos/${id}`, function (alumno) {
        $('#edit_id').val(alumno.id_alumno);
        $('#edit_nombre').val(alumno.nombre);
        $('#edit_apellido').val(alumno.apellido);
        $('#edit_fecha_nacimiento').val(alumno.fecha_nacimiento); // Asegúrate de que este campo esté correcto
        $('#edit_email').val(alumno.email);
        $('#edit_telefono').val(alumno.telefono);
        $('#edit_seccion').val(alumno.seccion);
        $('#edit_id_grado').val(alumno.id_grado);
        $('#edit_estado').val(alumno.estado);

        // Datos del padre
        $('#edit_nombre_padre').val(alumno.nombre_padre);
        $('#edit_telefono_padre').val(alumno.telefono_padre);
        $('#edit_correo_padre').val(alumno.correo_padre);

        // Datos de la madre
        $('#edit_nombre_madre').val(alumno.nombre_madre);
        $('#edit_telefono_madre').val(alumno.telefono_madre);
        $('#edit_correo_madre').val(alumno.correo_madre);

        $('#editModal').modal('show'); // Mostrar el modal
    }).fail(function () {
        showMessage('Error al cargar el alumno', 'danger'); // Mensaje de error
    });
});

function verFicha(button) {
    const id = $(button).data('id');

    // Verificar que el id no sea undefined
    if (!id) {
        console.error('ID no encontrado');
        return; // Detener la función si el ID es undefined
    }

    // Hacer una solicitud GET para obtener los datos del alumno y de los padres
    $.get(`/alumnos/${id}`, function (alumno) {
        // Asumiendo que los datos de los padres están en el objeto 'alumno'
        $('#alumnoNombre').text(alumno.nombre || 'No disponible');
        $('#alumnoApellido').text(alumno.apellido || 'No disponible');
        $('#padreNombre').text(alumno.nombre_padre || 'No disponible');
        $('#padreTelefono').text(alumno.telefono_padre || 'No disponible');
        $('#padreCorreo').text(alumno.correo_padre || 'No disponible');
        $('#madreNombre').text(alumno.nombre_madre || 'No disponible');
        $('#madreTelefono').text(alumno.telefono_madre || 'No disponible');
        $('#madreCorreo').text(alumno.correo_madre || 'No disponible');

        $('#fichaModal').modal('show'); // Mostrar el modal
    }).fail(function () {
        alert('Error al cargar la ficha'); // Mensaje de error
    });
}


//ver alumno
$(document).on('click', '[data-target="#viewModal"]', function() {
    var alumnoId = $(this).data('id');

    // Realiza una llamada a tu API o busca el alumno en tu array de datos
    // Supongamos que tienes un array `alumnos` con todos los datos
    var alumno = alumnos.find(a => a.id_alumno === alumnoId);

    // Llena los campos del modal con los datos del alumno
    $('#view_id').text(alumno.id_alumno);
    $('#view_nombre').text(alumno.nombre);
    $('#view_apellido').text(alumno.apellido);
    $('#view_fecha_nacimiento').text(new Date(alumno.fecha_nacimiento).toLocaleDateString('es-GT'));
    $('#view_email').text(alumno.email);
    $('#view_telefono').text(alumno.telefono);
    $('#view_seccion').text(alumno.seccion);
    
    // Lógica para mostrar el grado
    switch (alumno.id_grado) {
        case 5: $('#view_grado').text('Primero Primaria'); break;
        case 6: $('#view_grado').text('Segundo Primaria'); break;
        case 7: $('#view_grado').text('Tercero Primaria'); break;
        case 8: $('#view_grado').text('Cuarto Primaria'); break;
        case 9: $('#view_grado').text('Quinto Primaria'); break;
        case 12: $('#view_grado').text('Sexto Primaria'); break;
        case 13: $('#view_grado').text('Primero Básico'); break;
        case 14: $('#view_grado').text('Segundo Básico'); break;
        case 15: $('#view_grado').text('Tercero Básico'); break;
        case 20: $('#view_grado').text('Bachillerato en Ciencias Biológicas'); break;
        case 21: $('#view_grado').text('Bachillerato en Computación'); break;
        case 22: $('#view_grado').text('Bachillerato en Medicina'); break;
        case 23: $('#view_grado').text('Bachillerato en Magisterio'); break;
        case 26: $('#view_grado').text('Bachillerato en Turismo'); break;
        case 27: $('#view_grado').text('Bachillerato en Criminología'); break;
        case 29: $('#view_grado').text('Bachillerato en Secretariado'); break;
        case 30: $('#view_grado').text('Perito Contador'); break;
    }

    $('#view_estado').text(alumno.estado);
});
    
        // Eliminar alumno
        // Eliminar alumno
$(document).ready(function () {
    // Mostrar modal y asignar el ID del alumno al botón "Eliminar"
    $('#deleteModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Botón que abrió el modal
        var alumnoId = button.data('id'); // Extraer el ID del alumno
        var modal = $(this);
    
        // Asignar el ID al botón de confirmación de eliminación
        modal.find('#confirmDelete').data('id', alumnoId);
    });

    // Al hacer clic en el botón "Eliminar" dentro del modal
    $('#confirmDelete').click(function () {
        const id = $(this).data('id'); // Obtener el ID del alumno
        $.ajax({
            url: `/alumnos/${id}`,
            type: 'DELETE',
            success: function () {
                // Eliminar la fila del alumno en la tabla sin recargar la página
                $(`#alumno-${id}`).remove();
                
                // Cerrar el modal de eliminación
                $('#deleteModal').modal('hide');
                
                // Mostrar mensaje de éxito
                showMessage('success', 'Alumno eliminado con éxito');
            },
            error: function () {
                // Mostrar mensaje de error
                showMessage('danger', 'Error al eliminar el alumno');
            }
        });
    });
        
            // Filtrar en tiempo real
            $('.filters input, #filter_estado').on('input change', function () {
                const nombre = $('#filter_nombre').val().toLowerCase();
                const grado = $('#filter_grado').val().toLowerCase();
                const seccion = $('#filter_seccion').val().toLowerCase();
                const estado = $('#filter_estado').val();
        
                $('tbody tr').filter(function () {
                    const row = $(this);
                    const matchesNombre = row.find('td:eq(1)').text().toLowerCase().includes(nombre);
                    const matchesGrado = row.find('td:eq(7)').text().toLowerCase().includes(grado);
                    const matchesSeccion = row.find('td:eq(6)').text().toLowerCase().includes(seccion);
                    const matchesEstado = estado === "" || row.find('td:eq(8)').text() === estado;
        
                    // Mostrar la fila si cumple con todas las condiciones
                    return matchesNombre && matchesGrado && matchesSeccion && matchesEstado;
                }).show();
        
                $('tbody tr').filter(function () {
                    const row = $(this);
                    const matchesNombre = row.find('td:eq(1)').text().toLowerCase().includes(nombre);
                    const matchesGrado = row.find('td:eq(7)').text().toLowerCase().includes(grado);
                    const matchesSeccion = row.find('td:eq(6)').text().toLowerCase().includes(seccion);
                    const matchesEstado = estado === "" || row.find('td:eq(8)').text() === estado;
        
                    // Ocultar la fila si no cumple con todas las condiciones
                    return !(matchesNombre && matchesGrado && matchesSeccion && matchesEstado);
                }).hide();
            });

            // Suponiendo que tienes el número de registros por página
const registrosPorPagina = 5; // Cambia esto según lo que necesites
let paginaActual = 1;

// Obtén todos los registros (filas) de la tabla
const alumnosTable = document.querySelectorAll("#alumnosBody tr");

// Calcula el número total de páginas
const totalRegistros = alumnosTable.length;
const totalPaginas = Math.ceil(totalRegistros / registrosPorPagina);

// Función para mostrar la página actual
function mostrarPagina(pagina) {
    paginaActual = pagina;
    // Oculta todas las filas
    alumnosTable.forEach((row, index) => {
        row.style.display = "none";
        // Muestra solo las filas correspondientes a la página actual
        if (index >= (pagina - 1) * registrosPorPagina && index < pagina * registrosPorPagina) {
            row.style.display = "";
        }
    });
}

// Función para generar la barra de paginación
function generarPaginacion() {
    const paginacion = document.getElementById("alumnosPagination");
    paginacion.innerHTML = ""; // Limpia la paginación actual

    // Botón de página anterior
    const anterior = document.createElement("li");
    anterior.classList.add("page-item");
    anterior.innerHTML = `<a class="page-link" href="#" aria-label="Anterior">&laquo;</a>`;
    anterior.addEventListener("click", () => {
        if (paginaActual > 1) {
            mostrarPagina(paginaActual - 1);
            actualizarPaginacion();
        }
    });
    paginacion.appendChild(anterior);

    // Lógica para limitar el número de botones visibles
    const maxVisiblePages = 5; // Máximo de botones de página visibles
    let startPage = Math.max(1, paginaActual - Math.floor(maxVisiblePages / 2));
    let endPage = Math.min(totalPaginas, startPage + maxVisiblePages - 1);

    if (endPage - startPage < maxVisiblePages - 1) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }

    // Botones de número de página
    for (let i = startPage; i <= endPage; i++) {
        const li = document.createElement("li");
        li.classList.add("page-item");
        if (i === paginaActual) li.classList.add("active");
        li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
        li.addEventListener("click", () => {
            mostrarPagina(i);
            actualizarPaginacion();
        });
        paginacion.appendChild(li);
    }

    // Botón de página siguiente
    const siguiente = document.createElement("li");
    siguiente.classList.add("page-item");
    siguiente.innerHTML = `<a class="page-link" href="#" aria-label="Siguiente">&raquo;</a>`;
    siguiente.addEventListener("click", () => {
        if (paginaActual < totalPaginas) {
            mostrarPagina(paginaActual + 1);
            actualizarPaginacion();
        }
    });
    paginacion.appendChild(siguiente);
}

// Función para actualizar el estado de los botones de paginación
function actualizarPaginacion() {
    const botones = document.querySelectorAll("#alumnosPagination li");
    botones.forEach((boton, index) => {
        boton.classList.remove("active");
        if (index === paginaActual) {
            boton.classList.add("active");
        }
    });
}

// Inicializa la paginación y muestra la primera página
generarPaginacion();
mostrarPagina(1);
});
         //cargando
         document.addEventListener("DOMContentLoaded", function () {
            const loading = document.getElementById('loading');
        
            // Selecciona los enlaces del menú lateral
            const moduleLinks = document.querySelectorAll('.nav-links a');
        
            moduleLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    // Mostrar el mensaje de "Cargando"
                    loading.style.display = 'flex';
        
                    // Simular un retardo o puedes ocultarlo cuando la nueva página cargue
                    setTimeout(() => {
                        loading.style.display = 'none';
                    }, 8000); // Puedes ajustar el tiempo según lo que necesites
                });
            });
        });        
    </script>
    
</body>
</html>
