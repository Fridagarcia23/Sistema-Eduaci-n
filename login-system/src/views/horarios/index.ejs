<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Horarios</title>
     <!-- jsPDF y jsPDF Autotable (Versión más reciente) -->
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
     <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Margarine&display=swap" rel="stylesheet">
    <style>
        /* Estilo básico para el menú lateral */
        body {
            margin: 0;
            font-family: 'Margarine', sans-serif;
            display: flex;
            min-height: 100vh;
            background-color: #f7f7f7;
        }
        
        /* Menú lateral */
        .sidebar {
            width: 210px;
            background-color: #2a2d34;
            color: #fff;
            position: fixed;
            height: 100%;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            transition: left 0.3s ease;
            overflow: auto;
        }
        
        .sidebar.active {
            left: 0;
        }
        
        .nav-links {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .nav-links li {
            position: relative;
        }
        
        .nav-links a {
            display: flex;
            align-items: center;
            padding: 13.5px;
            color: #fff;
            text-decoration: none;
            position: relative;
            transition: transform 0.3s ease, background-color 0.3s ease;
        }

        .nav-links a i {
            margin-right: 15px; /* Mantiene el espacio entre icono y texto */
            font-size: 16px; /* Asegura que todos los iconos tengan el mismo tamaño */
            width: 20px; /* Añade un ancho fijo para mantener el espacio igual */
            text-align: center; /* Centra el ícono dentro de ese espacio */
        }
        
        .nav-links a:hover {
            background-color: #3e4149;
            transform: translateY(-5px);
        }
        
        .header {
            background: -webkit-linear-gradient(38deg, #39bb25, #f4f816); /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(38deg, #39bb25, #f4f816); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
            color: #050505;
            padding: 12px;
            position: fixed;
            top: 0;
            left: 250px;
            width: calc(100% - 250px);
            display: flex;
            align-items: center;
            justify-content: space-between;
            z-index: 1000;
        }
        
        .header-logo img {
            height: 80px;
            margin-right: 15px;
        }
        
        .header h1 {
            font-weight: 800;
            font-size: 1.8em;
            text-align: center;
            margin: 0 auto;
        }
 
        .header-section {
            display: flex;
            flex-direction: column;
            align-items: flex-start; /* Alinea el contenido a la izquierda */
            margin-left: 150px; /* Alinea a la izquierda en relación al contenido restante */
            padding: 5px;
        }
        
        .header-section h1 {
            margin-bottom: 5px; /* Espacio entre el título y el botón */
        }
        
        .header-section .btn {
            margin-bottom: 20px; /* Espacio entre el botón y otros elementos */
        }
        
        /* Estilos de los mensajes emergentes */
        #messageBox {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            width: 300px;
        }
        
        /* Estilo básico para la tabla */
        /* Estilo básico para la tabla */
 .table {
     position: relative;
     top: -10px;
     margin-top: 30px;
     border-collapse: collapse;
     width: 180%;  /* Ajusta el ancho de la tabla al 80% del contenedor */
     max-width: 1000px; /* Establece un ancho máximo para que no sea demasiado grande */
     margin-left: auto; /* Centra la tabla */
     margin-left: 160px; /* Centra la tabla */
 }
 
 .table th, .table td {
     padding: 8px 8px;
     text-align: left;
     word-wrap: break-word; /* Permite que el contenido dentro de las celdas se ajuste */
 }
 
 .table th {
     background-color: #f8f9fa;
     font-weight: bold;
 }
 
 .table tbody tr:nth-child(even) {
     background-color: #f2f2f2;
 }
 
 .table thead th {
     background-color: #359b16;
     color: white;
 }

        /* Modales */
        .modal-header {
            background-color: #007bff;
            color: white;
        }
        
        .modal-header .btn-close {
            color: white;
        }
        
        .modal .btn {
            margin-top: 13px;
        }
        #btnAddGrade i {
            margin-right: 1px; /* Espacio entre el ícono y el texto */
        }
        .nav-category {
            margin-bottom: 10px; /* Espacio entre categorías */
            margin-top: 10px;
        }
        
        .nav-category h3 {
            font-size: 1em; /* Tamaño del texto del título */
            color: #05f505; /* Color del título */
            margin-bottom: 7px; /* Espacio debajo del título */
        }

         /* Fondo transparente que cubre toda la página */
         .loading-overlay {
             position: fixed;
             top: 0;
             left: 0;
             width: 100%;
             height: 100%;
             background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */
             display: flex;
             justify-content: center;
             align-items: center;
             z-index: 1000; /* Asegura que esté por encima de otros elementos */
         }
 
         /* Contenido del cargando */
         .loading-content {
             text-align: center;
             color: white;
             font-size: 24px;
         }
 
         /* Ícono de carga */
         .loading-content i {
             font-size: 50px;
             margin-bottom: 10px;
         }
         /* Estilos para los mensajes */
.message-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    max-width: 300px;
    padding: 10px 15px;
    border-radius: 5px;
    font-size: 14px;
    color: #fff;
    background-color: #5cb85c; /* Color verde para éxito */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    opacity: 0;
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
    transform: translateY(-20px);
  }
  
  /* Animación para mostrar el mensaje */
  .message-container.show {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Estilos para los mensajes de error */
  .message-container.danger {
    background-color: #d9534f; /* Color rojo para error */
  }
   /* Asegúrate de que el contenedor ocupe el 100% del ancho */
   .container {
        width: 100%; /* O ajusta según necesites */
        max-width: 1000px; /* Ajusta el máximo si es necesario */
        margin: 100px; /* Centra el contenedor */
    }

    /* Alinear texto y elementos a la derecha */
    .text-right {
        text-align: right;
    }

    /* Flex para alinear botones a la derecha */
    .d-flex {
        display: flex;
        justify-content: flex-end; /* Alinea todo a la derecha */
    }
    </style>
 </head>
 <body>

     <!-- Mensaje de Cargando con iFrame GIF -->
     <div id="loading" style="display: none;" class="loading-overlay">
         <div class="loading-content">
             <i class="fas fa-spinner fa-spin"></i>
             <p>Cargando...</p>
         </div>
     </div>

     <!-- Mensaje de alerta -->
<% if (typeof message !== 'undefined' && message !== null) { %>
    <div class="alert alert-<%= message.type %> alert-dismissible fade show" role="alert" 
         style="position: fixed; top: 20px; right: 20px; z-index: 1050; white-space: nowrap;">
        <i class="mr-2 <% if (message.type === 'success') { %>fas fa-check-circle<% } else { %>fas fa-exclamation-circle<% } %>"></i>
        <%= message.content %>
    </div>
<% } %>
<div class="dashboard-container">
    <!-- Menú lateral -->
    <nav class="sidebar">
        <div class="nav-category">
            <h3><i class="fas fa-cogs"></i> Administración</h3>
            <ul class="nav-links">
                <li><a href="/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li><a href="/usuarios"><i class="fas fa-users"></i> Usuarios</a></li>
                <li><a href="/profesores"><i class="fas fa-chalkboard-teacher"></i> Profesores</a></li>
                <li><a href="/alumnos"><i class="fas fa-user-graduate"></i> Alumnos</a></li>
                <li><a href="/grados"><i class="fas fa-graduation-cap"></i> Grados</a></li>
            </ul>
        </div>
        
        <div class="nav-category">
            <h3><i class="fas fa-book-open"></i> Gestión Académica</h3>
            <ul class="nav-links">
                <li><a href="/cursos"><i class="fas fa-book"></i> Cursos</a></li>
                <li><a href="/horarios"><i class="fas fa-clock"></i> Horarios</a></li>
                <li><a href="/asistencias"><i class="fas fa-user-check"></i> Asistencia</a></li>
                <li><a href="/periodos"><i class="fas fa-calendar-alt"></i> Periodo Escolar</a></li>
            </ul>
        </div>
        
        <div class="nav-category">
            <h3><i class="fas fa-money-check-alt"></i> Gestión Financiera</h3>
            <ul class="nav-links">
                <li><a href="/pagos"><i class="fas fa-money-bill-alt"></i> Control de Pagos y Recibos</a></li>
            </ul>
        </div>
        
        <div class="nav-category">
            <h3><i class="fas fa-chart-line"></i> Reportes y Notificaciones</h3>
            <ul class="nav-links">
                <li><a href="/reportes"><i class="fas fa-chart-bar"></i> Reportes</a></li>
            </ul>
        </div>        
    </nav>

    <div class="container mt-5" style="text-align: right;">
        <h1 class="mb-4">Gestión de Horarios</h1>
    
        <!-- Seleccionar Profesor -->
        <div class="form-group">
            <label for="profesor">Seleccionar Profesor</label>
            <select class="form-control d-inline-block" id="profesor" style="width: 200px;" onchange="window.location.href='/horarios?profesor=' + this.value">                <option value="">Seleccione un profesor</option>
                <% profesores.forEach(profesor => { %>
                    <option value="<%= profesor.id_profesor %>" <%= profesor.id_profesor === idProfesor ? 'selected' : '' %>><%= profesor.nombre %></option>
                <% }); %>
            </select>
        </div>
    
        <!-- Mostrar horarios si se ha seleccionado un profesor -->
        <% if (idProfesor) { %>
            <h2 class="mt-4">Horarios de <%= nombreProfesor %></h2>
    
            <!-- Botones para agregar un nuevo horario y descargar PDF -->
            <div class="d-flex justify-content-end mt-3">
                <button type="button" class="btn btn-primary mb-3" data-toggle="modal" data-target="#modalAgregar">Agregar Horario</button>
                <button id="btnDescargarPDF" class="btn btn-success ml-2">Descargar PDF</button>
            </div>
    
            <!-- Tabla de horarios -->
            <table class="table table-bordered" id="tablaHorarios">
                <thead>
                    <tr>
                        <th>Día de la Semana</th>
                        <th>Hora Inicio</th>
                        <th>Hora Fin</th>
                        <th>Curso</th>
                        <th>Grado</th>
                        <th>Sección</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% horarios.forEach(horario => { %>
                        <tr>
                            <td><%= horario.dia_semana %></td>
                            <td><%= horario.hora_inicio %></td>
                            <td><%= horario.hora_fin %></td>
                            <td><%= horario.nombre_curso %></td>
                            <td><%= horario.nombre_grado %></td>
                            <td><%= horario.nombre_seccion %></td>
                            <td>
                                <!-- Botones de acción: Editar y Eliminar -->
                                <button class="btn btn-warning" data-toggle="modal" data-target="#modalEditar<%= horario.id_horario %>"> <i class="fas fa-edit"></i></button>
                                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#modalEliminar<%= horario.id_horario %>"><i class="fas fa-trash"></i></button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        <% } %>
    </div>
    
        <!-- Paginación -->
 <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center" id="pagination">
        <!-- Aquí se agregarán los botones de paginación -->
    </ul>
</nav>

        <!-- Modal Agregar -->
        <!-- Modal Agregar -->
<div class="modal fade" id="modalAgregar" tabindex="-1" role="dialog" aria-labelledby="modalAgregarLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form action="/horarios/agregar" method="POST">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalAgregarLabel">Agregar Horario</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="dia_semana">Día de la Semana</label>
                        <select class="form-control" id="dia_semana" name="dia_semana" required>
                            <option value="">Seleccione un día</option>
                            <option value="Lunes">Lunes</option>
                            <option value="Martes">Martes</option>
                            <option value="Miércoles">Miércoles</option>
                            <option value="Jueves">Jueves</option>
                            <option value="Viernes">Viernes</option>
                            <option value="Sábado">Sábado</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="hora_inicio">Hora de Inicio</label>
                        <input type="time" class="form-control" id="hora_inicio" name="hora_inicio" required>
                    </div>
                    <div class="form-group">
                        <label for="hora_fin">Hora de Fin</label>
                        <input type="time" class="form-control" id="hora_fin" name="hora_fin" required>
                    </div>
                    <div class="form-group">
                        <label for="curso">Curso</label>
                        <select class="form-control" id="curso" name="id_curso" required>
                            <option value="">Seleccione un curso</option>
                            <% cursos.forEach(curso => { %>
                                <option value="<%= curso.id_curso %>"><%= curso.nombre_curso %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="grado">Grado</label>
                        <select class="form-control" id="grado" name="id_grado" required>
                            <option value="">Seleccione un grado</option>
                            <% grados.forEach(grado => { %>
                                <option value="<%= grado.id_grado %>"><%= grado.nombre_grado %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="seccion">Sección</label>
                        <select class="form-control" id="seccion" name="id_seccion" required>
                            <option value="">Seleccione una sección</option>
                            <% secciones.forEach(seccion => { %>
                                <% if (['A', 'B', 'C', 'D'].includes(seccion.nombre_seccion)) { %>
                                    <option value="<%= seccion.id_seccion %>"><%= seccion.nombre_seccion %></option>
                                <% } %>
                            <% }); %>
                        </select>
                    </div>
                    <input type="hidden" name="id_profesor" value="<%= idProfesor %>">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>


        <!-- Modales de Editar y Eliminar (uno por cada horario) -->
        <% horarios.forEach(horario => { %>
            <!-- Modal Editar -->
            <div class="modal fade" id="modalEditar<%= horario.id_horario %>" tabindex="-1" role="dialog" aria-labelledby="modalEditarLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <form action="/horarios/editar/<%= horario.id_horario %>" method="POST">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalEditarLabel">Editar Horario</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <!-- Campo oculto para enviar el ID del profesor -->
                                <input type="hidden" name="id_profesor" value="<%= horario.id_profesor %>">
                        
                                <!-- Día de la Semana -->
                                <div class="form-group">
                                    <label for="dia_semana">Día de la Semana</label>
                                    <select class="form-control" id="dia_semana" name="dia_semana" required>
                                        <option value="Lunes" <%= horario.dia_semana === 'Lunes' ? 'selected' : '' %>>Lunes</option>
                                        <option value="Martes" <%= horario.dia_semana === 'Martes' ? 'selected' : '' %>>Martes</option>
                                        <option value="Miércoles" <%= horario.dia_semana === 'Miércoles' ? 'selected' : '' %>>Miércoles</option>
                                        <option value="Jueves" <%= horario.dia_semana === 'Jueves' ? 'selected' : '' %>>Jueves</option>
                                        <option value="Viernes" <%= horario.dia_semana === 'Viernes' ? 'selected' : '' %>>Viernes</option>
                                        <option value="Sábado" <%= horario.dia_semana === 'Sábado' ? 'selected' : '' %>>Sábado</option>
                                    </select>
                                </div>
                        
                                <!-- Hora de Inicio -->
                                <div class="form-group">
                                    <label for="hora_inicio">Hora de Inicio</label>
                                    <input type="time" class="form-control" id="hora_inicio" name="hora_inicio" value="<%= horario.hora_inicio %>" required>
                                </div>
                        
                                <!-- Hora de Fin -->
                                <div class="form-group">
                                    <label for="hora_fin">Hora de Fin</label>
                                    <input type="time" class="form-control" id="hora_fin" name="hora_fin" value="<%= horario.hora_fin %>" required>
                                </div>
                        
                                <!-- Curso -->
                                <div class="form-group">
                                    <label for="curso">Curso</label>
                                    <select class="form-control" id="curso" name="id_curso" required>
                                        <option value="">Seleccione un curso</option>
                                        <% cursos.forEach(curso => { %>
                                            <option value="<%= curso.id_curso %>" <%= horario.id_curso === curso.id_curso ? 'selected' : '' %>>
                                                <%= curso.nombre_curso %>
                                            </option>
                                        <% }); %>
                                    </select>
                                </div>
                        
                                <!-- Grado -->
                                <div class="form-group">
                                    <label for="grado">Grado</label>
                                    <select class="form-control" id="grado" name="id_grado" required>
                                        <option value="">Seleccione un grado</option>
                                        <% grados.forEach(grado => { %>
                                            <option value="<%= grado.id_grado %>" <%= horario.id_grado === grado.id_grado ? 'selected' : '' %>>
                                                <%= grado.nombre_grado %>
                                            </option>
                                        <% }); %>
                                    </select>
                                </div>
                        
                                <!-- Sección -->
                                <!-- Sección -->
                    <div class="form-group">
                        <label for="seccion">Sección</label>
                        <select class="form-control" id="seccion" name="id_seccion" required>
                            <option value="">Seleccione una sección</option>
                            <% secciones.forEach(seccion => { %>
                                <% if (['A', 'B', 'C', 'D'].includes(seccion.nombre_seccion)) { %>
                                    <option value="<%= seccion.id_seccion %>" <%= horario.id_seccion === seccion.id_seccion ? 'selected' : '' %>>
                                        <%= seccion.nombre_seccion %>
                                    </option>
                                <% } %>
                            <% }); %>
                        </select>
                    </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                            </div>
                        </form>
                        
                    </div>
                </div>
            </div>

            <!-- Modal Eliminar -->
            <div class="modal fade" id="modalEliminar<%= horario.id_horario %>" tabindex="-1" role="dialog" aria-labelledby="modalEliminarLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <form action="/horarios/eliminar/<%= horario.id_horario %>" method="POST">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalEliminarLabel">Eliminar Horario</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>¿Estás seguro de que deseas eliminar este horario?</p>
                                <p><strong>Curso:</strong> <%= horario.nombre_curso %></p>
                                <p><strong>Día:</strong> <%= horario.dia_semana %></p>
                                <p><strong>Hora:</strong> <%= horario.hora_inicio %> - <%= horario.hora_fin %></p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                <button type="submit" class="btn btn-danger">Eliminar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
    //mensaje

    $(document).ready(function() {
        // Espera 5 segundos y luego oculta la alerta
        setTimeout(function() {
          $('.alert').alert('close');
        }, 3000); // 5000 milisegundos = 5 segundos
      });
      
          //cargando
        document.addEventListener("DOMContentLoaded", function () {
        
        const loading = document.getElementById('loading');
    
        // Selecciona los enlaces del menú lateral
        const moduleLinks = document.querySelectorAll('.nav-links a');
    
        moduleLinks.forEach(link => {
            link.addEventListener('click', function (e) {
                // Mostrar el mensaje de "Cargando"
                loading.style.display = 'flex';
    
                // Simular un retardo o puedes ocultarlo cuando la nueva página cargue
                setTimeout(() => {
                    loading.style.display = 'none';
                }, 8000); // Puedes ajustar el tiempo según lo que necesites
            });
        });
    });        
    //descargar horarios

    document.getElementById('btnDescargarPDF').addEventListener('click', () => {
        const horarios = obtenerDatosDesdeTabla();
        const nombreProfesor = '<%= nombreProfesor %>'; // Asegúrate de que este valor contenga el nombre del profesor
        generarPDF(horarios, nombreProfesor);
    });

    function obtenerDatosDesdeTabla() {
        const horariosPorDia = {
            Lunes: [],
            Martes: [],
            Miércoles: [],
            Jueves: [],
            Viernes: [],
        };

        const tabla = document.getElementById('tablaHorarios').getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (let fila of tabla) {
            const celdas = fila.getElementsByTagName('td');
            const datosFila = {
                dia_semana: celdas[0].innerText,
                hora_inicio: celdas[1].innerText,
                hora_fin: celdas[2].innerText,
                nombre_curso: celdas[3].innerText,
                nombre_grado: celdas[4].innerText,
                nombre_seccion: celdas[5].innerText
            };

            if (horariosPorDia[datosFila.dia_semana]) {
                horariosPorDia[datosFila.dia_semana].push(datosFila);
            }
        }

        return horariosPorDia;
    }

    function generarPDF(horariosPorDia, nombreProfesor) {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF('landscape');
    
        const logoUrl = 'img/home.jpg'; // URL del logo
        doc.addImage(logoUrl, 'PNG', 14, 10, 30, 30);
    
        // Título del colegio
        doc.setFontSize(24);
        doc.setFont('helvetica', 'bold'); // Cambia la fuente a negrita
        const title = 'Centro Escolar La Escuela de Cristo';
        const titleWidth = doc.getTextWidth(title);
        doc.text(title, (doc.internal.pageSize.getWidth() - titleWidth) / 2, 20); // Centra el título
    
        // Nombre del profesor
        doc.setFontSize(16);
        doc.setFont('times', 'normal'); // Cambia la fuente a Times New Roman
        const nombreTexto = `Profesor: ${nombreProfesor}`;
        const nombreWidth = doc.getTextWidth(nombreTexto);
        doc.text(nombreTexto, (doc.internal.pageSize.getWidth() - nombreWidth) / 2, 30); // Centra el nombre
    
        // Encabezados, ahora incluimos Grado y Sección por cada día
        const encabezados = ['Hora', 'Lunes (Curso, Grado, Sección)', 'Martes (Curso, Grado, Sección)', 
                             'Miércoles (Curso, Grado, Sección)', 'Jueves (Curso, Grado, Sección)', 
                             'Viernes (Curso, Grado, Sección)'];
    
        const filas = [];
        const horasUnicas = obtenerHorasUnicas(horariosPorDia);
    
        horasUnicas.forEach(hora => {
            const fila = [hora]; // Primera columna con la hora
    
            // Para cada día de la semana
            ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes'].forEach(dia => {
                const horarioDia = horariosPorDia[dia].find(h => `${h.hora_inicio} - ${h.hora_fin}` === hora);
                
                if (horarioDia) {
                    // Agregamos el curso, grado y sección en la misma celda
                    fila.push(`${horarioDia.nombre_curso}, ${horarioDia.nombre_grado}, ${horarioDia.nombre_seccion}`);
                } else {
                    fila.push('-'); // Si no hay datos para ese día y hora
                }
            });
    
            filas.push(fila); // Agregamos la fila completa a la tabla
        });
    
        doc.autoTable({
            head: [encabezados],
            body: filas,
            startY: 50,
            theme: 'grid',
            headStyles: { fillColor: [76, 175, 80] },
            styles: { cellPadding: 3, fontSize: 11 },
            alternateRowStyles: { fillColor: [240, 255, 240] }
        });
    
        // Obtener la fecha y hora actual
        const fechaActual = new Date();
        const fecha = fechaActual.toLocaleDateString();
        const hora = fechaActual.toLocaleTimeString();
        doc.setFontSize(12);
        const fechaTexto = `Generado el: ${fecha} a las ${hora}`;
    
        // Posición de la fecha en la esquina inferior izquierda
        const margenIzquierdo = 10; // Margen desde la izquierda
        const margenInferior = 10; // Margen desde el fondo
        doc.text(fechaTexto, margenIzquierdo, doc.internal.pageSize.height - margenInferior); // Esquina inferior izquierda
    
        // Guardar el documento PDF
        doc.save('horario_clases.pdf');
    }
    function obtenerHorasUnicas(horariosPorDia) {
        const horasSet = new Set();

        ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes'].forEach(dia => {
            horariosPorDia[dia].forEach(horario => {
                horasSet.add(`${horario.hora_inicio} - ${horario.hora_fin}`);
            });
        });

        return Array.from(horasSet).sort();
    }

    //paginacion
    let currentPage = 1;
    const rowsPerPage = 5; // Cambia este valor según cuántas filas quieras por página

    function renderTablePage(page) {
    const tableBody = document.querySelector('#tablaHorarios tbody');
    const rows = Array.from(tableBody.querySelectorAll('tr'));
    const totalRows = rows.length;

    const start = (page - 1) * rowsPerPage;
    const end = start + rowsPerPage;

    rows.forEach((row, index) => {
        row.style.display = index >= start && index < end ? '' : 'none';
    });

    updatePagination(totalRows, page);
}

    function updatePagination(totalRows, page) {
    const paginationContainer = document.getElementById('pagination');
    const totalPages = Math.ceil(totalRows / rowsPerPage);

    paginationContainer.innerHTML = '';

    // Botón "Anterior"
    const prevLi = document.createElement('li');
    prevLi.className = `page-item ${page === 1 ? 'disabled' : ''}`;
    
    const prevA = document.createElement('a');
    prevA.className = 'page-link';
    prevA.href = '#';
    prevA.innerText = '«';
    prevA.addEventListener('click', function (e) {
        e.preventDefault();
        if (currentPage > 1) {
            currentPage--;
            renderTablePage(currentPage);
        }
    });

    prevLi.appendChild(prevA);
    paginationContainer.appendChild(prevLi);

    // Crear botones de paginación (números)
    for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement('li');
        li.className = `page-item ${i === page ? 'active' : ''}`;

        const a = document.createElement('a');
        a.className = 'page-link';
        a.href = '#';
        a.innerText = i;
        a.addEventListener('click', function (e) {
            e.preventDefault();
            currentPage = i;
            renderTablePage(currentPage);
        });

        li.appendChild(a);
        paginationContainer.appendChild(li);
    }

    // Botón "Siguiente"
    const nextLi = document.createElement('li');
    nextLi.className = `page-item ${page === totalPages ? 'disabled' : ''}`;
    
    const nextA = document.createElement('a');
    nextA.className = 'page-link';
    nextA.href = '#';
    nextA.innerText = '»';
    nextA.addEventListener('click', function (e) {
        e.preventDefault();
        if (currentPage < totalPages) {
            currentPage++;
            renderTablePage(currentPage);
        }
    });

    nextLi.appendChild(nextA);
    paginationContainer.appendChild(nextLi);
}

// Llamar a la función para mostrar la primera página
renderTablePage(currentPage);

</script>

</body>
</html>
