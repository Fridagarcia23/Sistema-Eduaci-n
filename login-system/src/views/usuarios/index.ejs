<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Usuarios</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        #messageBox {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050; /* Asegúrate de que esté sobre otros elementos */
            width: 300px;
        }
        .pagination {
            display: flex;
            justify-content: center;
            padding: 0;
            margin: 20px 0;
            list-style: none;
        }
        
        .pagination .page-item {
            margin: 0 5px;
        }
        
        .pagination .page-link {
            display: block;
            padding: 10px 15px;
            font-size: 14px; /* Tamaño más pequeño para los números */
            color: #007bff;
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            text-decoration: none;
        }
        
        .pagination .page-link:hover {
            background-color: #e9ecef;
            border-color: #ddd;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
            pointer-events: none; /* Desactiva el enlace para la página activa */
        }
        
        .pagination .page-link:focus, .pagination .page-link:active {
            box-shadow: none;
        }
        .pagination {
            display: flex;
            justify-content: center;
            padding: 0;
            margin: 20px 0;
            list-style: none;
        }
        
        .pagination .page-item {
            margin: 0 5px;
        }
        
        .pagination .page-link {
            display: block;
            padding: 8px 12px;
            font-size: 12px; /* Tamaño de fuente ajustado */
            color: #007bff;
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            text-decoration: none;
        }
        
        .pagination .page-link:hover {
            background-color: #e9ecef;
            border-color: #ddd;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
            pointer-events: none;
        }
        
        .pagination .page-link:focus, .pagination .page-link:active {
            box-shadow: none;
        }
                
    </style>
</head>
<body>
    <div class="content">
    <div class="container mt-4">
        <h1>Gestión de Usuarios</h1>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUserModal"><i class="fas fa-user-plus"></i> Crear Usuario</button>        

        <!-- Tabla de usuarios -->
        <table class="table mt-3">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Correo</th>
                    <th>Teléfono</th>
                    <th>Dirección</th>
                    <th>Fecha de Nacimiento</th>
                    <th>Género</th>
                    <th>Rol</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                <!-- Los usuarios se cargarán aquí mediante JavaScript -->
            </tbody>
        </table>

        <!-- Paginación -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-end" id="pagination">
                <!-- Los botones de paginación se cargarán aquí -->
            </ul>
        </nav>

        <!-- Modal para crear usuario -->
        <div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createUserModalLabel">Crear Usuario</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <form id="createUserForm">
                            <div class="mb-3">
                                <label for="nombre" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="nombre" required>
                            </div>
                            <div class="mb-3">
                                <label for="correo" class="form-label">Correo</label>
                                <input type="email" class="form-control" id="correo" required>
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Contraseña</label>
                                <input type="password" class="form-control" id="password" required>
                            </div>
                            <div class="mb-3">
                                <label for="telefono" class="form-label">Teléfono</label>
                                <input type="text" class="form-control" id="telefono">
                            </div>
                            <div class="mb-3">
                                <label for="direccion" class="form-label">Dirección</label>
                                <input type="text" class="form-control" id="direccion">
                            </div>
                            <div class="mb-3">
                                <label for="fecha_nacimiento" class="form-label">Fecha de Nacimiento</label>
                                <input type="date" id="fecha_nacimiento" class="form-control">
                            </div>
                            <div class="mb-3">
                                <label for="genero" class="form-label">Género</label>
                                <select class="form-select" id="genero">
                                    <option value="M">Masculino</option>
                                    <option value="F">Femenino</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="estado" class="form-label">Estado</label>
                                <select class="form-select" id="estado">
                                    <option value="activo">Activo</option>
                                    <option value="inactivo">Inactivo</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="rol" class="form-label">Rol</label>
                                <select class="form-select" id="rol">
                                    <option value="1">Administrador</option>
                                    <option value="2">Profesor</option>
                                </select>
                            </div>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary" id="saveUserButton">Guardar</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

       <!-- Modal para editar usuario -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Editar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId">
                    <div class="mb-3">
                        <label for="editNombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="editNombre">
                    </div>
                    <div class="mb-3">
                        <label for="editCorreo" class="form-label">Correo</label>
                        <input type="email" class="form-control" id="editCorreo">
                    </div>
                    <div class="mb-3">
                        <label for="editPassword" class="form-label">Contraseña</label>
                        <input type="password" class="form-control" id="editPassword">
                    </div>
                    <div class="mb-3">
                        <label for="editTelefono" class="form-label">Teléfono</label>
                        <input type="text" class="form-control" id="editTelefono">
                    </div>
                    <div class="mb-3">
                        <label for="editDireccion" class="form-label">Dirección</label>
                        <input type="text" class="form-control" id="editDireccion">
                    </div>
                    <div class="mb-3">
                        <label for="editFechaNacimiento" class="form-label">Fecha de Nacimiento</label>
                        <input type="date" id="editFechaNacimiento" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="editGenero" class="form-label">Género</label>
                        <select class="form-select" id="editGenero">
                            <option value="M">Masculino</option>
                            <option value="F">Femenino</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editEstado" class="form-label">Estado</label>
                        <select class="form-select" id="editEstado">
                            <option value="activo">Activo</option>
                            <option value="inactivo">Inactivo</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editRol" class="form-label">Rol</label>
                        <select class="form-select" id="editRol">
                            <option value="1">Administrador</option>
                            <option value="2">Profesor</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" id="updateUserButton">Actualizar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </form>
            </div>
        </div>
    </div>
</div>

        <!-- Modal para ver usuario -->
        <div class="modal fade" id="viewUserModal" tabindex="-1" aria-labelledby="viewUserModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="viewUserModalLabel">Detalles del Usuario</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <p><strong>Nombre:</strong> <span id="viewNombre"></span></p>
                        <p><strong>Correo:</strong> <span id="viewCorreo"></span></p>
                        <p><strong>Teléfono:</strong> <span id="viewTelefono"></span></p>
                        <p><strong>Dirección:</strong> <span id="viewDireccion"></span></p>
                        <p><strong>Fecha de Nacimiento:</strong> <span id="viewFechaNacimiento"></span></p>
                        <p><strong>Género:</strong> <span id="viewGenero"></span></p>
                        <p><strong>Estado:</strong> <span id="viewEstado"></span></p>
                        <p><strong>Rol:</strong> <span id="viewRol"></span></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para eliminar usuario -->
        <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteUserModalLabel">Eliminar Usuario</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <p>¿Está seguro de que desea eliminar este usuario?</p>
                        <button type="button" class="btn btn-danger" id="deleteUserButton">Eliminar</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Añade esto para mostrar mensajes -->
<div id="messageBox" class="alert" style="display:none;"></div>


    <!-- Scripts de Bootstrap y jsPDF -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/2.5.5/jspdf.plugin.autotable.min.js"></script>
    <script>
            function showMessage(type, message) {
                const messageBox = document.getElementById('messageBox');
                messageBox.className = `alert alert-${type}`;
                messageBox.innerText = message;
                messageBox.style.display = 'block'; // Muestra el mensaje
                setTimeout(() => messageBox.style.display = 'none', 3000); // Oculta el mensaje después de 3 segundos
            }
            
            function formatISOToDate(isoDate) {
                const date = new Date(isoDate);
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }
            
            document.addEventListener('DOMContentLoaded', () => {
                let currentPage = 1;
    
                function loadUsers(page) {
                    fetch(`/api/usuarios?page=${page}`)
                        .then(response => response.json())
                        .then(data => {
                            const tableBody = document.getElementById('userTableBody');
                            tableBody.innerHTML = '';
    
                            data.users.forEach(user => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                    <td>${user.id_usuario}</td>
                                    <td>${user.nombre_usuario}</td>
                                    <td>${user.email}</td>
                                    <td>${user.telefono}</td>
                                    <td>${user.direccion}</td>
                                    <td>${formatISOToDate(user.fecha_nacimiento)}</td>
                                    <td>${user.genero}</td>
                                    <td>${user.id_rol}</td>
                                    <td>${user.estado}</td>
                                    <td>
                                        <div class="btn-group" role="group" aria-label="Acciones">
                                            <button class="btn btn-info btn-sm" data-id="${user.id_usuario}" onclick="viewUser(this)"><i class="fas fa-eye"></i></button>
                                            <button class="btn btn-warning btn-sm" data-id="${user.id_usuario}" onclick="editUser(this)"><i class="fas fa-edit"></i></button>
                                            <button class="btn btn-danger btn-sm" data-id="${user.id_usuario}" onclick="deleteUser(this)"><i class="fas fa-trash"></i></button>
                                        </div>
                                    </td>
                                `;
                                tableBody.appendChild(row);
                            });
    
                            const pagination = document.getElementById('pagination');
                            pagination.innerHTML = '';
    
                            const createPageItem = (text, page, isDisabled = false, isActive = false) => {
                                const li = document.createElement('li');
                                li.className = `page-item${isDisabled ? ' disabled' : ''}${isActive ? ' active' : ''}`;
                                li.innerHTML = `
                                    <a class="page-link" href="#" data-page="${page}">${text}</a>
                                `;
                                return li;
                            };
    
                            // Botón de "Anterior"
                            pagination.appendChild(createPageItem('Anterior', currentPage - 1, currentPage === 1));
    
                            // Botones de páginas
                            for (let i = 1; i <= data.totalPages; i++) {
                                pagination.appendChild(createPageItem(i, i, false, i === currentPage));
                            }
    
                            // Botón de "Siguiente"
                            pagination.appendChild(createPageItem('Siguiente', currentPage + 1, currentPage === data.totalPages));
                        })
                        .catch(error => showMessage('danger', `Error al cargar usuarios: ${error.message}`));
                }
    
                document.getElementById('pagination').addEventListener('click', (e) => {
                    if (e.target.classList.contains('page-link')) {
                        e.preventDefault();
                        const page = parseInt(e.target.getAttribute('data-page'));
                        if (!isNaN(page) && page !== currentPage) {
                            currentPage = page;
                            loadUsers(page);
                        }
                    }
                });
    
                loadUsers(currentPage);
                
                window.viewUser = function(button) {
                    const id = button.getAttribute('data-id');
        
                    fetch(`/api/usuarios/${id}`)
                        .then(response => response.json())
                        .then(user => {
                            document.getElementById('viewNombre').innerText = user.nombre_usuario;
                            document.getElementById('viewCorreo').innerText = user.email;
                            document.getElementById('viewTelefono').innerText = user.telefono;
                            document.getElementById('viewDireccion').innerText = user.direccion;
                            document.getElementById('viewFechaNacimiento').innerText = formatISOToDate(user.fecha_nacimiento);
                            document.getElementById('viewGenero').innerText = user.genero;
                            document.getElementById('viewEstado').innerText = user.estado;
                            document.getElementById('viewRol').innerText = user.id_rol;
        
                            const viewUserModal = new bootstrap.Modal(document.getElementById('viewUserModal'));
                            viewUserModal.show();
                        })
                        .catch(error => showMessage('danger', `Error al ver usuario: ${error.message}`));
                }
        
                window.editUser = function(button) {
                    const id = button.getAttribute('data-id');
        
                    fetch(`/api/usuarios/${id}`)
                        .then(response => response.json())
                        .then(user => {
                            document.getElementById('editUserId').value = user.id_usuario;
                            document.getElementById('editNombre').value = user.nombre_usuario;
                            document.getElementById('editCorreo').value = user.email;
                            document.getElementById('editPassword').value = ''; // Clear password field
                            document.getElementById('editTelefono').value = user.telefono;
                            document.getElementById('editDireccion').value = user.direccion;
                            document.getElementById('editFechaNacimiento').value = formatISOToDate(user.fecha_nacimiento); // Formatea la fecha
                            document.getElementById('editGenero').value = user.genero;
                            document.getElementById('editEstado').value = user.estado;
                            document.getElementById('editRol').value = user.id_rol;
        
                            const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal'));
                            editUserModal.show();
                        })
                        .catch(error => showMessage('danger', `Error al editar usuario: ${error.message}`));
                }
        
                document.getElementById('saveUserButton').addEventListener('click', () => {
                    const fechaNacimiento = document.getElementById('fecha_nacimiento').value;
                    const user = {
                        nombre_usuario: document.getElementById('nombre').value,
                        email: document.getElementById('correo').value,
                        contraseña: document.getElementById('password').value,
                        telefono: document.getElementById('telefono').value,
                        direccion: document.getElementById('direccion').value,
                        fecha_nacimiento: fechaNacimiento,
                        genero: document.getElementById('genero').value,
                        estado: document.getElementById('estado').value,
                        id_rol: document.getElementById('rol').value
                    };
                
                    fetch('/api/usuarios', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(user)
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('User created:', data); // Debugging line
                        const createUserModal = document.getElementById('createUserModal');
                        const modalInstance = bootstrap.Modal.getInstance(createUserModal); 
                        modalInstance.hide(); // Cierra el modal
                        loadUsers(currentPage); // Recarga los usuarios
                        showMessage('success', 'Usuario creado exitosamente.'); // Asegúrate de que esto se llame
                    })
                    .catch(error => showMessage('danger', `Error al crear usuario: ${error.message}`));
                });
                
        
                document.getElementById('updateUserButton').addEventListener('click', () => {
                    const id = document.getElementById('editUserId').value;
                    const user = {
                        nombre_usuario: document.getElementById('editNombre').value,
                        email: document.getElementById('editCorreo').value,
                        contraseña: document.getElementById('editPassword').value,
                        telefono: document.getElementById('editTelefono').value,
                        direccion: document.getElementById('editDireccion').value,
                        fecha_nacimiento: document.getElementById('editFechaNacimiento').value,
                        genero: document.getElementById('editGenero').value,
                        estado: document.getElementById('editEstado').value,
                        id_rol: document.getElementById('editRol').value
                    };
        
                    fetch(`/api/usuarios/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(user)
                    })
                    .then(response => response.json())
                    .then(() => {
                        const editUserModal = document.getElementById('editUserModal');
                        const modalInstance = bootstrap.Modal.getInstance(editUserModal);
                        modalInstance.hide(); // Cierra el modal
                        loadUsers(currentPage); // Recarga los usuarios
                        showMessage('success', 'Usuario actualizado exitosamente.');
                    })
                    .catch(error => showMessage('danger', `Error al actualizar usuario: ${error.message}`));
                });
        
                window.deleteUser = function(button) {
                    const id = button.getAttribute('data-id');
                    document.getElementById('deleteUserButton').setAttribute('data-id', id);
        
                    const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
                    deleteUserModal.show();
                }
        
                document.getElementById('deleteUserButton').addEventListener('click', () => {
                    const id = document.getElementById('deleteUserButton').getAttribute('data-id');
        
                    fetch(`/api/usuarios/${id}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(() => {
                        const deleteUserModal = document.getElementById('deleteUserModal');
                        const modalInstance = bootstrap.Modal.getInstance(deleteUserModal);
                        modalInstance.hide(); // Cierra el modal
                        loadUsers(currentPage); // Recarga los usuarios
                        showMessage('success', 'Usuario eliminado exitosamente.');
                    })
                    .catch(error => showMessage('danger', `Error al eliminar usuario: ${error.message}`));
                });
        
                document.getElementById('pagination').addEventListener('click', (e) => {
                    if (e.target.classList.contains('page-link')) {
                        e.preventDefault();
                        const page = parseInt(e.target.getAttribute('data-page'));
                        currentPage = page;
                        loadUsers(page);
                    }
                });
        
                loadUsers(currentPage);
            });
    </script>
</body>
</html>
